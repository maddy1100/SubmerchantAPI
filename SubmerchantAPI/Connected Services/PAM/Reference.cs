//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PAM
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/UserIdentityApplication")]
    public partial class User : object
    {
        
        private string PasswordField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JwtTokens", Namespace="http://schemas.datacontract.org/2004/07/UserIdentityApplication")]
    public partial class JwtTokens : object
    {
        
        private string AccessTokenField;
        
        private string IdTokenField;
        
        private string RefreshTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken
        {
            get
            {
                return this.AccessTokenField;
            }
            set
            {
                this.AccessTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdToken
        {
            get
            {
                return this.IdTokenField;
            }
            set
            {
                this.IdTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefreshToken
        {
            get
            {
                return this.RefreshTokenField;
            }
            set
            {
                this.RefreshTokenField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordInformation", Namespace="http://schemas.datacontract.org/2004/07/TF.PAM.BusinessLayer.BusinessObjects")]
    public partial class PasswordInformation : object
    {
        
        private string encryptedPasswordField;
        
        private string passwordField;
        
        private string passwordSaltField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string encryptedPassword
        {
            get
            {
                return this.encryptedPasswordField;
            }
            set
            {
                this.encryptedPasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string passwordSalt
        {
            get
            {
                return this.passwordSaltField;
            }
            set
            {
                this.passwordSaltField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PAM.IdentityService")]
    public interface IdentityService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdentityService/GetData", ReplyAction="http://tempuri.org/IdentityService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdentityService/GetData", ReplyAction="http://tempuri.org/IdentityService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdentityService/ValidateToken", ReplyAction="http://tempuri.org/IdentityService/ValidateTokenResponse")]
        string ValidateToken(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdentityService/ValidateToken", ReplyAction="http://tempuri.org/IdentityService/ValidateTokenResponse")]
        System.Threading.Tasks.Task<string> ValidateTokenAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdentityService/LoginUser", ReplyAction="http://tempuri.org/IdentityService/LoginUserResponse")]
        PAM.JwtTokens LoginUser(PAM.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdentityService/LoginUser", ReplyAction="http://tempuri.org/IdentityService/LoginUserResponse")]
        System.Threading.Tasks.Task<PAM.JwtTokens> LoginUserAsync(PAM.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdentityService/CreatePassword", ReplyAction="http://tempuri.org/IdentityService/CreatePasswordResponse")]
        PAM.PasswordInformation CreatePassword();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdentityService/CreatePassword", ReplyAction="http://tempuri.org/IdentityService/CreatePasswordResponse")]
        System.Threading.Tasks.Task<PAM.PasswordInformation> CreatePasswordAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdentityService/ExtendSession", ReplyAction="http://tempuri.org/IdentityService/ExtendSessionResponse")]
        PAM.JwtTokens ExtendSession(string refreshToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdentityService/ExtendSession", ReplyAction="http://tempuri.org/IdentityService/ExtendSessionResponse")]
        System.Threading.Tasks.Task<PAM.JwtTokens> ExtendSessionAsync(string refreshToken);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IdentityServiceChannel : PAM.IdentityService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class IdentityServiceClient : System.ServiceModel.ClientBase<PAM.IdentityService>, PAM.IdentityService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public IdentityServiceClient() : 
                base(IdentityServiceClient.GetDefaultBinding(), IdentityServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IdentityService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IdentityServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(IdentityServiceClient.GetBindingForEndpoint(endpointConfiguration), IdentityServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IdentityServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(IdentityServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IdentityServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(IdentityServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IdentityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string GetData(int value)
        {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value)
        {
            return base.Channel.GetDataAsync(value);
        }
        
        public string ValidateToken(string token)
        {
            return base.Channel.ValidateToken(token);
        }
        
        public System.Threading.Tasks.Task<string> ValidateTokenAsync(string token)
        {
            return base.Channel.ValidateTokenAsync(token);
        }
        
        public PAM.JwtTokens LoginUser(PAM.User user)
        {
            return base.Channel.LoginUser(user);
        }
        
        public System.Threading.Tasks.Task<PAM.JwtTokens> LoginUserAsync(PAM.User user)
        {
            return base.Channel.LoginUserAsync(user);
        }
        
        public PAM.PasswordInformation CreatePassword()
        {
            return base.Channel.CreatePassword();
        }
        
        public System.Threading.Tasks.Task<PAM.PasswordInformation> CreatePasswordAsync()
        {
            return base.Channel.CreatePasswordAsync();
        }
        
        public PAM.JwtTokens ExtendSession(string refreshToken)
        {
            return base.Channel.ExtendSession(refreshToken);
        }
        
        public System.Threading.Tasks.Task<PAM.JwtTokens> ExtendSessionAsync(string refreshToken)
        {
            return base.Channel.ExtendSessionAsync(refreshToken);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IdentityService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IdentityService))
            {
                return new System.ServiceModel.EndpointAddress("http://52.142.56.221/PAM/IdentityService.svc/IdentityService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return IdentityServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IdentityService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return IdentityServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IdentityService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IdentityService,
        }
    }
}
